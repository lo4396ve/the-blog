(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{388:function(e,t,n){"use strict";n.r(t);var r=n(45),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[e._v("#")]),e._v(" 介绍")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/lo4396ve/vue-analysis/tree/simple",target:"_blank",rel:"noopener noreferrer"}},[e._v("简易版的源码地址"),n("OutboundLink")],1),e._v("，打开mysrc目录阅读即可。")]),e._v(" "),n("p",[e._v("简易版vue并不是我按照自己的想法随便写的一个迷你版的vue。是完全从vue源码中抽取的一个基础骨架，打包出来的源码如果放到一个vue项目中，仅能保证把静态页面渲染出来，最基础的data响应式绑定也不支持。这个版本的目的是为了能更清楚的了解vue源码的整体结构，学习一个庞大的系统，从整体到局部是一个比较好的方法。")]),e._v(" "),n("h2",{attrs:{id:"抽取过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#抽取过程"}},[e._v("#")]),e._v(" 抽取过程")]),e._v(" "),n("p",[e._v("简单分析如何从vue源码中提取出这个简易版本的。")]),e._v(" "),n("h3",{attrs:{id:"分析入口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分析入口"}},[e._v("#")]),e._v(" 分析入口")]),e._v(" "),n("p",[e._v("从入口下手，前面的章节已经分析过了，打包入口文件在 platform/web/entry-runtime.js，打开该文件")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import Vue from './runtime/index'\nexport default Vue\n")])])]),n("p",[e._v("继续寻找./runtime/index：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import Vue from 'core/index'\nimport { mountComponent } from 'core/instance/lifecycle'\nimport { query } from 'web/util/index'\nimport { patch } from './patch'\n\nVue.prototype.__patch__ = patch;\n\nVue.prototype.$mount = function (el) {\n  el = el && query(el);\n  return mountComponent(this, el)\n}\n\nexport default Vue\n")])])]),n("p",[e._v("先忽略其他代码，只看这部分，Vue是从core/index引入的，并且在Vue原型上扩展了__parch__方法和$mount方法，这两个方法都是与渲染组件相关，其逻辑后面再分析。先继续寻找core/index。")]),e._v(" "),n("p",[e._v("打开src/core/index.js")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import Vue from './instance/index'\nimport { initGlobalAPI } from './global-api/index'\n\ninitGlobalAPI(Vue)\n\nVue.version = '__VERSION__'\n\nexport default Vue\n")])])]),n("p",[e._v("从./instance/index引入Vue，然后执行了initGlobalAPI方法，先不管initGlobalAPI，继续挖./instance/index：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("function Vue (options) {\n  // init方法啊在initMixin被定义\n  this._init(options)\n}\n")])])]),n("p",[e._v("终于找到了Vue的定义。代码很简洁，只执行了this._init方法。这也是作者的一个设计思路，Vue本质是一个Function构造方法，它的原型 prototype 以及它本身都扩展了一系列的方法和属性，在扩展的方法里面处理其他的逻辑。")]),e._v(" "),n("h2",{attrs:{id:"工具包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#工具包"}},[e._v("#")]),e._v(" 工具包")]),e._v(" "),n("p",[e._v("源码提供了很多工具方法，比如isObject判断是否对象类型的方法，我们的重点并不在他们身上，所以对于工具目录不做太多分析，也没有抽离里面的方法，整个目录复制过去。")]),e._v(" "),n("p",[e._v("工具目录：")]),e._v(" "),n("ul",[n("li",[e._v("shared // shared提供浏览器端和服务端是通用的方法")]),e._v(" "),n("li",[e._v("src/core/util // 在创建操作Vue实例和操作VNode（虚拟dom）时用到的一些工具方法")]),e._v(" "),n("li",[e._v("src/core/instance/render-helpers // 提供与渲染render相关的辅助工具，后面用到的时候具体再分析")]),e._v(" "),n("li",[e._v("src/core/vdom/helpers // vdom管理着虚拟dom（VNode），而vdom/helpers提供了与虚拟dom有关的方法，比如判断组件是否动态组件")]),e._v(" "),n("li",[e._v("platform/web/util // 专门提供给web浏览器端使用的工具方法，比如判断一个标签是不是html标准标签")])]),e._v(" "),n("h2",{attrs:{id:"运行"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#运行"}},[e._v("#")]),e._v(" 运行")]),e._v(" "),n("p",[e._v("克隆"),n("a",{attrs:{href:"https://github.com/lo4396ve/vue-analysis/tree/simple",target:"_blank",rel:"noopener noreferrer"}},[e._v("简易版源码"),n("OutboundLink")],1),e._v("到本地，切换到simple分支，执行")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm install\nnpm run dev:esm\n")])])]),n("p",[e._v("在dist目录下会生成vue.runtime.esm.js。")]),e._v(" "),n("p",[e._v("用vue-cli创建一个vue2.x版本的项目vue-project，把vue.runtime.esm.js放在vue-project项目的src目录下，修改main.js和APP.vue")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// main.js\nimport Vue from './vue.runtime.esm.js'\nimport App from './App.vue'\nnew Vue({\n  render: h => {\n    return h(App)\n  },\n}).$mount('#app')\n\n// APP.vue\n<template>\n  <div id=\"app\">\n    <div>测试</div>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {}\n  }\n}\n<\/script>\n")])])]),n("p",[e._v("运行vue-project项目，APP.vue渲染成功说明vue.runtime.esm.js是没有问题的。")])])}),[],!1,null,null,null);t.default=a.exports}}]);